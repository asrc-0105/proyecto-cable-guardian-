#include <Servo.h>  // Incluir la biblioteca Servo

// Definición de pines
const int pinSensor = 2;  // Pin digital donde se conecta la señal del sensor de cables muertos
const int pinServo = 9;   // Pin digital donde se conecta el servomotor

// Variables
bool cableMuertoDetectado = false;
Servo servoMotor;  // Crear un objeto Servo

// Configuraciones de ajuste
const int posicionCorte = 90;  // Posición del servomotor para cortar el cable
const int posicionReposo = 0;  // Posición inicial del servomotor
const int tiempoCorte = 5000;  // Tiempo en milisegundos que el servomotor debe permanecer en la posición de corte
const int tiempoEspera = 1000; // Tiempo en milisegundos entre lecturas del sensor

void setup() {
  // Inicialización de pines
  pinMode(pinSensor, INPUT);        // El pin del sensor está en modo de entrada
  
  // Inicializa el servomotor
  servoMotor.attach(pinServo);       // Conecta el servomotor al pin especificado
  servoMotor.write(posicionReposo);  // Posición inicial del servomotor
  
  // Inicialización adicional, si es necesario
}

void loop() {
  // Leer el estado del sensor
  cableMuertoDetectado = digitalRead(pinSensor);
  
  // Si se detecta un cable muerto
  if (cableMuertoDetectado) {
    // Activar el actuador para cortar el cable
    servoMotor.write(posicionCorte);  // Mover el servomotor a la posición de corte
    
    // Esperar hasta que el corte se complete
    delay(tiempoCorte);
    
    // Regresar el servomotor a la posición inicial
    servoMotor.write(posicionReposo);
    
    // Esperar antes de volver a comprobar el sensor para evitar múltiples detecciones del mismo cable
    delay(tiempoEspera * 2);  // Doble del tiempo de espera para permitir estabilización
  } else {
    // Solo esperar si no hay detección
    delay(tiempoEspera);
  }
}
